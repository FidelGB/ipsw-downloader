name: Publish image to Docker hub

on:
  push:
    branches:
      - "master"

env:
  DOCKER_REGISTRY: ${{ vars.DOCKER_REGISTRY }}
  DOCKER_IMAGE_NAME: ${{ vars.DOCKER_IMAGE_NAME }}

jobs:
  build:
    strategy:
      matrix:
        node-version: 
        - 20
    name: Publish image
    runs-on: ubuntu-latest
    environment: Docker
    steps:
      - name: Clonar Repositorio
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get Versioning Data
        id: versioning
        uses: Soumeh/Auto-Versioning@main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push the Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.prod
          build-args: |
            APP_VERSION=${{ steps.versioning.outputs.tag }}
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.versioning.outputs.tag }}
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:buildcache,mode=max

      - name: Create Release
        uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # names the release after the head commit
          name: "v${{ steps.versioning.outputs.tag }}"
          tag: ${{ steps.versioning.outputs.tag }}
          body: "${{ steps.versioning.outputs.changelog }}"
          gzip: false